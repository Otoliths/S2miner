url <- 'https://www.connectedpapers.com/api/redirect/s2/9397e7acd062245d37350f5c05faf56e9cfae0d6'
browseURL(url)
browse_cp <- function(query = NULL,option = "semantic-scholar-id") {
cat(sprintf("last Update: %s",Sys.Date()),sep = "\n")
url <- 'https://www.connectedpapers.com/api/redirect/'
option <- match.arg(option, c("semantic-scholar-id","doi","pubmed-id","arxiv-id"))
switch(as.character(option),
"semantic-scholar-id" = {browseURL(paste0(url,"s2/",query))},
"doi" = {browseURL(paste0(url,"doi/",query))},
"pubmed-id" = {browseURL(paste0(url,"pmid/",query))},
"arxiv-id" = {browseURL(paste0(url,"arxiv/",query))})
}
browse_cp('9397e7acd062245d37350f5c05faf56e9cfae0d6',"semantic-scholar-id")
library(semanticscholar)
S2_author
S2_paper
?stop
?is.character
browse_cp <- function(query = NULL,option = "semantic-scholar-id") {
#if (!is.character(query))
stop("Only string queries are supported,please input one character.",is.character(query))
cat(sprintf("last Update: %s",Sys.Date()),sep = "\n")
url <- 'https://www.connectedpapers.com/api/redirect/'
option <- match.arg(option, c("semantic-scholar-id","doi","pubmed-id","arxiv-id"))
switch(as.character(option),
"semantic-scholar-id" = {browseURL(paste0(url,"s2/",query))},
"doi" = {browseURL(paste0(url,"doi/",query))},
"pubmed-id" = {browseURL(paste0(url,"pmid/",query))},
"arxiv-id" = {browseURL(paste0(url,"arxiv/",query))})
}
browse_cp(1,"semantic-scholar-id")
browse_cp("1","semantic-scholar-id")
browse_cp("1","semantic-scholar-id")
browse_cp <- function(query = NULL,option = "semantic-scholar-id") {
#if (!is.character(query))
stop("Only string queries are supported,please input one character.",!is.character(query))
cat(sprintf("last Update: %s",Sys.Date()),sep = "\n")
url <- 'https://www.connectedpapers.com/api/redirect/'
option <- match.arg(option, c("semantic-scholar-id","doi","pubmed-id","arxiv-id"))
switch(as.character(option),
"semantic-scholar-id" = {browseURL(paste0(url,"s2/",query))},
"doi" = {browseURL(paste0(url,"doi/",query))},
"pubmed-id" = {browseURL(paste0(url,"pmid/",query))},
"arxiv-id" = {browseURL(paste0(url,"arxiv/",query))})
}
browse_cp("1","semantic-scholar-id")
browse_cp("1","semantic-scholar-id")
browse_cp(1,"semantic-scholar-id")
browse_cp <- function(query = NULL,option = "semantic-scholar-id") {
if (!is.character(query))
stop("Only string queries are supported,please input one character.")
cat(sprintf("last Update: %s",Sys.Date()),sep = "\n")
url <- 'https://www.connectedpapers.com/api/redirect/'
option <- match.arg(option, c("semantic-scholar-id","doi","pubmed-id","arxiv-id"))
switch(as.character(option),
"semantic-scholar-id" = {browseURL(paste0(url,"s2/",query))},
"doi" = {browseURL(paste0(url,"doi/",query))},
"pubmed-id" = {browseURL(paste0(url,"pmid/",query))},
"arxiv-id" = {browseURL(paste0(url,"arxiv/",query))})
}
browse_cp(1,"semantic-scholar-id")
browse_cp('9397e7acd062245d37350f5c05faf56e9cfae0d6',"semantic-scholar-id")
browse_cp('9397e7acd062245d37350f5c05faf56e9cfae0d6',"semantic-scholar-id")
!is.character(query)
browse_cp <- function(query = NULL,option = "semantic-scholar-id") {
if (!is.character(query))
stop("Only string queries are supported,please input one character.")
cat(sprintf("last Update: %s",Sys.Date()),sep = "\n")
url <- 'https://www.connectedpapers.com/api/redirect/'
option <- match.arg(option, c("semantic-scholar-id","doi","pubmed-id","arxiv-id"))
switch(as.character(option),
"semantic-scholar-id" = {browseURL(paste0(url,"s2/",query))},
"doi" = {browseURL(paste0(url,"doi/",query))},
"pubmed-id" = {browseURL(paste0(url,"pmid/",query))},
"arxiv-id" = {browseURL(paste0(url,"arxiv/",query))})
}
browse_cp('1512.03385',"arxiv-id")
browse_cp('9397e7acd062245d37350f5c05faf56e9cfae0d6',"semantic-scholar-id")
browse_cp <- function(query = NULL,option = "semantic-scholar-id") {
if (!is.character(query))
stop("Only string queries are supported,please input one character.")
cat(sprintf("Created on %s",Sys.Date()),sep = "\n")
url <- 'https://www.connectedpapers.com/api/redirect/'
option <- match.arg(option, c("semantic-scholar-id","doi","pubmed-id","arxiv-id"))
switch(as.character(option),
"semantic-scholar-id" = {browseURL(paste0(url,"s2/",query))},
"doi" = {browseURL(paste0(url,"doi/",query))},
"pubmed-id" = {browseURL(paste0(url,"pmid/",query))},
"arxiv-id" = {browseURL(paste0(url,"arxiv/",query))})
}
browse_cp('32171076',"pubmed-id")
ï¼ŸbrowseURL
?browseURL
devtools::document()
devtools::document()
library(S2miner)
detach("package:S2miner", unload = TRUE)
devtools::document()
library(S2miner)
devtools::document()
library(S2miner)
devtools::document()
devtools::document()
library(S2miner)
devtools::document()
library(S2miner)
devtools::document()
devtools::document()
library(S2miner)
devtools::document()
remove.packages("S2miner")
library(S2miner)
?assert
??assert
?inherits
x <- 10
class(x) # "numeric"
oldClass(x) # NULL
inherits(x, "a")
devtools::document()
library(S2miner)
browse_cp('9397e7acd062245d37350f5c05faf56e9cfae0d6',"s2")
browse_cp(1,"s2")
cat(sprintf("last Update %s",Sys.Date()-1),sep = "\n")
